
# Copyright IBM Inc. 2015, 2019. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
# Author(s):
#   James McDonagh
#   Michael Johnston
#   Vassilis Vassiliadis


status-report:
  0:
    arguments: '1'
    executable: echo
    stage-weight: 0.1
  1:
    arguments: '1'
    executable: echo
    stage-weight: 0.9


platforms:
- default
- openshift
- openshift-kubeflux

blueprint:
  openshift-kubeflux:
    global:
      resourceManager:
        kubernetes:
          podSpec:
            schedulerName: kubeflux

environments:
  # Platforms that do not override the environments, use the ones that default defines
  default:
    PYTHON: {}

components:

  ## This gets the row number index to read for each replica
- stage: 0
  name: GetMoleculeIndex
  command:
    arguments: -c \"print(%(startIndex)s + %(replica)s),\"
    executable: python
  workflowAttributes:
    replicate: '%(numberMolecules)s'

  ## Note row is used to name the output sdf and xyz files used later make the input files. This will give each one a unique name
  ## over the replicas here
- stage: 0
  name: SMILESToXYZ
  command:
    arguments: --input smiles.csv --row GetMoleculeIndex:output
    environment: python
    executable: bin/rdkit_smiles2coordinates.py
  references:
  - input/smiles.csv:copy
  - GetMoleculeIndex:output
  resourceManager:
    config:
      backend: '%(backend)s'
    kubernetes:
      image: quay.io/st4sd/community-applications/rdkit-st4sd:2019.09.1

  ## This runs a geometry optimization using ANI
- stage: 0
  name: GeometryOptimisationANI
  command:
    arguments: --xyz_path stage0.SMILESToXYZ:ref -xyz stage0.GetMoleculeIndex:output  
      --ani_model %(ani-model)s -o bfgs -i %(iterations)s --temperature %(T)s 
      --pressure %(P)s --force_tolerance %(force-tol)s --outname stage0.GetMoleculeIndex:output
    environment: python
    executable: bin/optimize_ani.py
  references:
    - stage0.SMILESToXYZ:ref
    - stage0.GetMoleculeIndex:output
  workflowAttributes:
    shutdownOn:
    - KnownIssue
  resourceManager:
    config:
      backend: '%(backend)s'
      walltime: "%(ani-walltime)s"
    kubernetes:
      gracePeriod: "%(ani-grace-period)s"
      image: quay.io/st4sd/community-applications/ani-torch-st4sd:2.2.2
  resourceRequest:
    memory: '%(mem)s'
    numberThreads: '%(number-processors)s'
    threadsPerCore: 1

- stage: 0
  name: XYZToGAMESS
  command:
    arguments: -xp stage0.GeometryOptimisationANI:ref -xf stage0.GetMoleculeIndex:output 
      -g input/input_molecule.txt:ref -sp stage0.SMILESToXYZ:ref 
      -sf stage0.GetMoleculeIndex:output
    environment: python
    executable: bin/make_gamess_input_from_template_and_xyz.py
  references:
  - stage0.GeometryOptimisationANI:ref
  - input/input_molecule.txt:ref
  - stage0.SMILESToXYZ:ref
  - stage0.GetMoleculeIndex:output
  resourceManager:
    config:
      backend: '%(backend)s'
    kubernetes:
      image: quay.io/st4sd/community-applications/rdkit-st4sd:2019.09.1

variables:
  default:
    global:
      mem: '4295000000'
      backend: local
      number-processors: '1'
      startIndex: '0'
      numberMolecules: '1'
      ani-model: "ani2x"
      force-tol: 0.005
      iterations: 1000
      # For ANI walltime (in minutes), gracePeriod (in seconds) (compatible with k8s backend)
      ani-walltime: 700
      ani-grace-period: 1800
      # For thermochemistry
      T: 298.15
      P: 101325.0
    stages:
      0:
        stage-name: SMILES_to_GAMESS
  openshift:
    global:
      backend: kubernetes
  openshift-kubeflux:
    global:
      backend: kubernetes
